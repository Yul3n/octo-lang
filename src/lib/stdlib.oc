-- Booleans

type bool =
  True | False

if c lazy x lazy y =
  case c of
    True -> x
    False -> y

not True = False
not False = True

or True _ = True
or False x = x

and False _ = False
and True x = x

xor True x = (not x)
xor False x = x

iszero 0 = True
iszero n = False

-- Combinators

id x = x

cons x _ = x

con =
  cons

compose f g x = (f (g x))

flip f g x = (g (f x))

-- Maths

fact 0 = 1
fact n =
  n * (fact (n - 1))

power 0 n = 1
power p n =
  n * (power (p - 1) n)

sum x y = x + y

prod x y = x * y

gcd x y =
  case y of
    0 -> x
    y -> (gcd y (x % y))

-- Types

type option a
  = None
  | Some a
